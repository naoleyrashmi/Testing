version: 0.2

phases:
  install:
    commands:
    # - |
    #     pip install -U pip
    #     pip install -U awscli
    # - pip3 install aws-sam-cli


  pre_build:
    commands:
      - echo "[Pre-Build phase]"
#       - export APIGATEWAYNAME=${apiGatewayStageName}
#         export LAMBDAFUNCTIONNAME=${lambdaFunctionName}
#         python generate_CF_params.py "APIGATEWAYNAME, LAMBDAFUNCTIONNAME"
#         chmod 777 params.yaml
#         cat params.yaml
# CODEBUILD_SRC_DIR=C:\codebuild\tmp\output\src870899099\src\github.com\naoleyrashmi\Testing
#                   C:\codebuild\tmp\output\src276879719\src\packaged.yaml
         
  build:
    commands:
      # - sam build 
      - aws cloudformation package --template-file template.yaml --s3-bucket rashmi-ohio-sam-demo --output-template-file packaged.yaml
      # - aws s3 cp ./packaged.yaml s3://rashmi-ohio-sam-demo/packaged.yaml
      # - aws s3 cp s3://rashmi-ohio-sam-demo/packaged.yaml C:\codebuild\tmp\output
      
      # - copy packaged.yaml C:\codebuild\tmp\output
      # - aws s3 cp ./packaged.yaml C:\codebuild\tmp\output\
      # - aws s3 cp s3://rashmi-ohio-sam-demo/packaged.yaml C:\codebuild\tmp\output
      # - aws s3 cp s3://rashmi-ohio-sam-demo/packaged.yaml C:\codebuild\tmp\output\
      # - aws s3 cp ./packaged.yaml .
      # - sam deploy --stack-name codebuildtesting --change-set-type=CREATE

  post_build:
    commands:
      - aws cloudformation deploy --template-file $CODEBUILD_SRC_DIR --capabilities CAPABILITY_IAM --stack-name codebuildstack
     
artifacts:
  type: zip
  files:
    - packaged.yaml